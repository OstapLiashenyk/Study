Слайд 1
Добрий день! Сьогодні я, Ляшеник Остап, хочу представити вам сервіс для бронювання аудиторій.


Слайд 2

 На цьому проекті було використано багато різних технологій таких як:
SQLAlchemy, pytest, alembic, flask_bcrypt, Marshmallow. 
А тепер давайте розберемось, що це означає простими словами.
SQLAlchemy - це інструментарій для керування базою даних, але більше того, він дає нам повний набір шаблонів, які забезпечують нам надійність.
alembic - надає нам можливість для міграцій між версіями нашої бази даних.
А вот за допомогою flask_bcrypt ми гарантуємо, що ваш пароль, окрім вас ніхто не побачить, адже за його допомогою ми хешуємо пароль.
Marshmallow - це бібліотека,яку ми використовуємо, щоб перевірити чи ви все правильно ввели і потім не було ніяких проблем як і з підтвердженням акаунту, так ні з скиданням паролю, тощо.
Але більше того, що наш сервіс використовував pytest, тобто наш сервіс пройшов перевірку не одним тестом.

Слайд 3

Читай текст з презентації, а потім це:

Також на нашому сайті буде існувати 3 роллі:
користувач-звичайна людина,яка окрім того щоб керувати власними бронюваннями не може, менеджер - який буде мати мжливість оновлювати інформації про аудиторію, а також адмвн - який має доступ до всіх методів та стежить за цілісністю бази

слайд 4

база даних буде складатись з 3 таблиць:
Табличка “user” - інформація про користувача
Табличка “rooms” - інформація про аудиторії
Табличка “booked_room”- інформація про бронювання
Зв’язок між користувачами і аудиторією буде реалізований через 3 табличку.

слайд 5

Перший метод для створення користувачів, другий для авторизації, далі для виходу зі системи, за допомогою url /user/id ми можемо оновити інформацію про користувача, отримати інформацію про нього та видалити його з бази. за 7 методом ми робимо бронювання,а за /user/book/id ми отримуємр інформацію про бронювання, може оновити бронювання та його скасувати,тоюто видалити

слайд 6


за першим матодом ми вносимо аудиторії до бази даних. за /room/id ми отриуємо інформацію  про аудиторію, оновлюємо її,а також можемо видалити кімнату з БД

слайд 7.
  читай зі слайду

слайд 8
 за допомогою pytest я реалізував юніт тестування,цим самим покрив наш сервіс тестами,як ми бачимо більше 90% покрито тестами

слайд 9
Дякую за увагу! час для запитань!
